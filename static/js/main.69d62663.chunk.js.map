{"version":3,"sources":["views/pages/home/logo.svg","Component/map/map.js","Component/clock/clock.js","views/pages/home/index.js","Component/form/loginform.js","views/pages/login/index.js","Component/form/registerform.js","views/pages/register/index.js","Component/form/findform.js","views/pages/findpassword/index.js","views/routes/index.js","index.js"],"names":["module","exports","__webpack_require__","p","MapView","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","center","zoom","fov","pitch","bearing","map","MapInit","maptalks","baseLayer","urlTemplate","subdomains","attribution","react_default","a","createElement","id","className","Component","Clock","date","Date","_this2","timerID","setInterval","tick","clearInterval","setState","style","color","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","Index","handleClick","e","alert","map_map","src","logo","alt","href","target","rel","onClick","clock_clock","FormItem","Form","Item","NormalLoginForm","contextTypes","router","preventDefault","data","form","getFieldsValue","history","userName","passWord","push","getFieldDecorator","es_form","onSubmit","handleSubmit","rules","required","message","input","prefix","icon","type","placeholder","es_checkbox","es_button","htmlType","React","WrapForm","create","loginform","Option","Select","AutoCompleteOption","AutoComplete","residences","value","label","children","RegistrationForm","confirmDirty","autoCompleteResult","validateFieldsAndScroll","err","values","console","log","handleConfirmBlur","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","handleWebsiteChange","domain","concat","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","prefixSelector","initialValue","es_select","width","websiteOptions","website","key","assign","validator","onBlur","tooltip","title","whitespace","cascader","options","addonBefore","auto_complete","dataSource","onChange","extra","row","gutter","col","valuePropName","WrappedRegistrationForm","registerform","FindPasswordForm","findform","routes","react","fallback","Switch","HashRouter","Route","exact","path","component","Login","Register","Findpassword","Home","ReactDOM","render","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.69d62663.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { Component } from 'react';\r\nimport * as maptalks from 'maptalks';\r\nimport './map.css';\r\n\r\nclass MapView extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            center: [-0.113049, 51.498568],\r\n            zoom: 14,\r\n            fov: 0,\r\n            pitch: 0,\r\n            bearing: 0\r\n        };\r\n        this.map = null;\r\n    }\r\n\r\n    //在渲染前调用,在客户端也在服务端。\r\n    componentWillMount() {\r\n\r\n    }\r\n\r\n    // 在第一次渲染后调用，只在客户端。之后组件已经生成了对应的DOM结构，可以通过this.getDOMNode()来进行访问。 如果你想和其他JavaScript框架一起使用，可以在这个方法中调用setTimeout, setInterval或者发送AJAX请求等操作(防止异步操作阻塞UI)。\r\n    componentDidMount() {\r\n        this.MapInit();\r\n    }\r\n\r\n    //在组件接收到一个新的 prop (更新后)时被调用。这个方法在初始化render时不会被调用。\r\n    componentWillReceiveProps() {\r\n\r\n    }\r\n    //返回一个布尔值。在组件接收到新的props或者state时被调用。在初始化时或者使用forceUpdate时不被调用。 可以在你确认不需要更新组件时使用。\r\n    shouldComponentUpdate() {\r\n\r\n    }\r\n    //在组件接收到新的props或者state但还没有render时被调用。在初始化时不会被调用\r\n    componentWillUpdate() {\r\n\r\n    }\r\n    //在组件完成更新后立即调用。在初始化时不会被调用。\r\n    componentDidUpdate() {\r\n\r\n    }\r\n    //在组件从 DOM 中移除之前立刻被调用。\r\n    componentWillUnmount() {\r\n\r\n    }\r\n\r\n    MapInit() {\r\n        this.map = new maptalks.Map('map', {\r\n            center: this.state.center,\r\n            zoom: this.state.zoom,\r\n            baseLayer: new maptalks.TileLayer('base', {\r\n                urlTemplate: 'http://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png',\r\n                subdomains: ['a', 'b', 'c', 'd'],\r\n                attribution: '&copy; <a href=\"http://osm.org\">OpenStreetMap</a> contributors, &copy; <a href=\"https://carto.com/\">CARTO</a>'\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"map\" className=\"Map-container\"></div>\r\n        )\r\n    }\r\n}\r\nexport default MapView;\r\n","import React, { Component } from 'react';\r\nimport './clock.css'\r\nclass Clock extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { date: new Date() };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(\r\n            () => this.tick(),\r\n            1000\r\n        );\r\n    }\r\n\r\n    componentWillMount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    tick() {\r\n        this.setState({\r\n            date: new Date()\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"clock-div\">\r\n                <h2 style={{ color: '#61dafb' }}>Now is &nbsp;\r\n            {this.state.date.getFullYear()}-\r\n            {this.state.date.getMonth() + 1}-\r\n            {this.state.date.getDate()} &nbsp;\r\n            {this.state.date.getHours()}:\r\n            {this.state.date.getMinutes()}:\r\n            {this.state.date.getSeconds()}\r\n                </h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Clock;","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './index.css';\r\nimport MapView from '../../../Component/map/map'\r\nimport Clock from '../../../Component/clock/clock';\r\n\r\nclass Index extends Component {\r\n  handleClick = (e) => {\r\n    alert('hello react');\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Home\">\r\n        <header className=\"Home-header\">\r\n          <div className=\"Home-map\"><MapView /></div>\r\n          <img src={logo} className=\"Home-logo\" alt=\"logo\" />\r\n          <div className=\"Bottom-container\">\r\n            <a\r\n              className=\"Home-link\"\r\n              href=\"https://reactjs.org\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Learn React\r\n          </a>&nbsp;&nbsp;\r\n            <a\r\n              className=\"Home-link\"\r\n              href=\"https://maptalks.org\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Learn Maptalks\r\n          </a>\r\n            <div\r\n              className=\"Home-button\"\r\n              onClick={this.handleClick}\r\n            >\r\n              Click Me\r\n          </div>\r\n          <Clock />\r\n          </div>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Index;\r\n","import React from \"react\"\r\nimport { Form, Icon, Input, Button, Checkbox } from 'antd';\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/icon/style/css';\r\nimport 'antd/lib/input/style/css';\r\nimport 'antd/lib/button/style/css';\r\nimport 'antd/lib/checkbox/style/css';\r\n// import 'antd/dist/antd.css';\r\n\r\nconst FormItem = Form.Item;\r\nclass NormalLoginForm extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        NormalLoginForm.contextTypes = {\r\n            router: () => ''\r\n        };\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        debugger;\r\n        let data = this.props.form.getFieldsValue();\r\n        let history = this.context.router.history\r\n        if (data.userName === 'zlq' && data.passWord === '123') {\r\n            history.push('/home');\r\n        } else {\r\n            alert(\"密码错误\");\r\n        }\r\n        // axios.post(\"/users\",data).then(function(res){\r\n        //     let resMsg = res.data.data;\r\n        //     if(resMsg.name === \"lily\" && resMsg.password===\"1\"){\r\n        //         history.push('/manage');\r\n        //     }else{\r\n        //         alert(\"密码错误\")\r\n        //     }\r\n        // })\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div>\r\n                <Form onSubmit={(e) => this.handleSubmit(e)} className=\"login-form\">\r\n                    <FormItem>\r\n                        {\r\n                            getFieldDecorator(\r\n                                'userName', {\r\n                                    rules: [{ required: true, message: '姓名不能为空！' }],\r\n                                }\r\n                            )(\r\n                                <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Username\" />\r\n                            )\r\n                        }\r\n                    </FormItem>\r\n                    <FormItem>\r\n                        {\r\n                            getFieldDecorator(\r\n                                \"passWord\", {\r\n                                    rules: [{ required: true, message: \"密码不能为空！\" }]\r\n                                }\r\n                            )(\r\n                                <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Password\" />\r\n                            )\r\n                        }\r\n                    </FormItem>\r\n                    <FormItem>\r\n                        <Checkbox>Remember me</Checkbox>\r\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                            Log in\r\n                        </Button>\r\n                    </FormItem>\r\n                    <FormItem>\r\n                        <a\r\n                            className=\"login-form-forgot\"\r\n                            href=\"#/findpassword\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            Forgot password\r\n                        </a>\r\n                        Or <a\r\n                            href=\"#/register\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            register now!\r\n                        </a>\r\n                    </FormItem>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet WrapForm = Form.create()(NormalLoginForm)\r\nexport default WrapForm\r\n","import React, { Component } from 'react';\r\nimport './index.css';\r\nimport LoginForm from '../../../Component/form/loginform';\r\n\r\nexport default class Index extends Component {\r\n\r\n  componentDidMount() {\r\n    /* eslint-disable no-unused-vars */\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Login-contain\">\r\n        <div className=\"loginform-contain\">\r\n          <LoginForm></LoginForm>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","import React from \"react\"\r\nimport {\r\n    Form, Input, Tooltip, Icon, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete,\r\n} from 'antd';\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/input/style/css';\r\nimport 'antd/lib/tooltip/style/css';\r\nimport 'antd/lib/icon/style/css';\r\nimport 'antd/lib/cascader/style/css';\r\nimport 'antd/lib/select/style/css';\r\nimport 'antd/lib/row/style/css';\r\nimport 'antd/lib/col/style/css';\r\nimport 'antd/lib/checkbox/style/css';\r\nimport 'antd/lib/button/style/css';\r\nimport 'antd/lib/auto-complete/style/css';\r\n\r\n\r\nconst { Option } = Select;\r\nconst AutoCompleteOption = AutoComplete.Option;\r\n\r\nconst residences = [{\r\n    value: 'zhejiang',\r\n    label: 'Zhejiang',\r\n    children: [{\r\n        value: 'hangzhou',\r\n        label: 'Hangzhou',\r\n        children: [{\r\n            value: 'xihu',\r\n            label: 'West Lake',\r\n        }],\r\n    }],\r\n}, {\r\n    value: 'jiangsu',\r\n    label: 'Jiangsu',\r\n    children: [{\r\n        value: 'nanjing',\r\n        label: 'Nanjing',\r\n        children: [{\r\n            value: 'zhonghuamen',\r\n            label: 'Zhong Hua Men',\r\n        }],\r\n    }],\r\n}];\r\n\r\nclass RegistrationForm extends React.Component {\r\n    state = {\r\n        confirmDirty: false,\r\n        autoCompleteResult: [],\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n            }\r\n        });\r\n    }\r\n\r\n    handleConfirmBlur = (e) => {\r\n        const value = e.target.value;\r\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n    }\r\n\r\n    compareToFirstPassword = (rule, value, callback) => {\r\n        const form = this.props.form;\r\n        if (value && value !== form.getFieldValue('password')) {\r\n            callback('Two passwords that you enter is inconsistent!');\r\n        } else {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    validateToNextPassword = (rule, value, callback) => {\r\n        const form = this.props.form;\r\n        if (value && this.state.confirmDirty) {\r\n            form.validateFields(['confirm'], { force: true });\r\n        }\r\n        callback();\r\n    }\r\n\r\n    handleWebsiteChange = (value) => {\r\n        let autoCompleteResult;\r\n        if (!value) {\r\n            autoCompleteResult = [];\r\n        } else {\r\n            autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\r\n        }\r\n        this.setState({ autoCompleteResult });\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        const { autoCompleteResult } = this.state;\r\n\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 8 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 16 },\r\n            },\r\n        };\r\n        const tailFormItemLayout = {\r\n            wrapperCol: {\r\n                xs: {\r\n                    span: 24,\r\n                    offset: 0,\r\n                },\r\n                sm: {\r\n                    span: 16,\r\n                    offset: 8,\r\n                },\r\n            },\r\n        };\r\n        const prefixSelector = getFieldDecorator('prefix', {\r\n            initialValue: '86',\r\n        })(\r\n            <Select style={{ width: 70 }}>\r\n                <Option value=\"86\">+86</Option>\r\n                <Option value=\"87\">+87</Option>\r\n            </Select>\r\n        );\r\n\r\n        const websiteOptions = autoCompleteResult.map(website => (\r\n            <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\r\n        ));\r\n\r\n        return (\r\n            <Form onSubmit={this.handleSubmit}>\r\n                <Form.Item\r\n                    {...formItemLayout}\r\n                    label=\"E-mail\"\r\n                >\r\n                    {getFieldDecorator('email', {\r\n                        rules: [{\r\n                            type: 'email', message: 'The input is not valid E-mail!',\r\n                        }, {\r\n                            required: true, message: 'Please input your E-mail!',\r\n                        }],\r\n                    })(\r\n                        <Input />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item\r\n                    {...formItemLayout}\r\n                    label=\"Password\"\r\n                >\r\n                    {getFieldDecorator('password', {\r\n                        rules: [{\r\n                            required: true, message: 'Please input your password!',\r\n                        }, {\r\n                            validator: this.validateToNextPassword,\r\n                        }],\r\n                    })(\r\n                        <Input type=\"password\" />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item\r\n                    {...formItemLayout}\r\n                    label=\"Confirm Password\"\r\n                >\r\n                    {getFieldDecorator('confirm', {\r\n                        rules: [{\r\n                            required: true, message: 'Please confirm your password!',\r\n                        }, {\r\n                            validator: this.compareToFirstPassword,\r\n                        }],\r\n                    })(\r\n                        <Input type=\"password\" onBlur={this.handleConfirmBlur} />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item\r\n                    {...formItemLayout}\r\n                    label={(\r\n                        <span>\r\n                            Nickname&nbsp;\r\n                <Tooltip title=\"What do you want others to call you?\">\r\n                                <Icon type=\"question-circle-o\" />\r\n                            </Tooltip>\r\n                        </span>\r\n                    )}\r\n                >\r\n                    {getFieldDecorator('nickname', {\r\n                        rules: [{ required: true, message: 'Please input your nickname!', whitespace: true }],\r\n                    })(\r\n                        <Input />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item\r\n                    {...formItemLayout}\r\n                    label=\"Habitual Residence\"\r\n                >\r\n                    {getFieldDecorator('residence', {\r\n                        initialValue: ['zhejiang', 'hangzhou', 'xihu'],\r\n                        rules: [{ type: 'array', required: true, message: 'Please select your habitual residence!' }],\r\n                    })(\r\n                        <Cascader options={residences} />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item\r\n                    {...formItemLayout}\r\n                    label=\"Phone Number\"\r\n                >\r\n                    {getFieldDecorator('phone', {\r\n                        rules: [{ required: true, message: 'Please input your phone number!' }],\r\n                    })(\r\n                        <Input addonBefore={prefixSelector} style={{ width: '100%' }} />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item\r\n                    {...formItemLayout}\r\n                    label=\"Website\"\r\n                >\r\n                    {getFieldDecorator('website', {\r\n                        rules: [{ required: true, message: 'Please input website!' }],\r\n                    })(\r\n                        <AutoComplete\r\n                            dataSource={websiteOptions}\r\n                            onChange={this.handleWebsiteChange}\r\n                            placeholder=\"website\"\r\n                        >\r\n                            <Input />\r\n                        </AutoComplete>\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item\r\n                    {...formItemLayout}\r\n                    label=\"Captcha\"\r\n                    extra=\"We must make sure that your are a human.\"\r\n                >\r\n                    <Row gutter={8}>\r\n                        <Col span={12}>\r\n                            {getFieldDecorator('captcha', {\r\n                                rules: [{ required: true, message: 'Please input the captcha you got!' }],\r\n                            })(\r\n                                <Input />\r\n                            )}\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Button>Get captcha</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form.Item>\r\n                <Form.Item {...tailFormItemLayout}>\r\n                    {getFieldDecorator('agreement', {\r\n                        valuePropName: 'checked',\r\n                    })(\r\n                        <Checkbox>I have read the\r\n                            <a\r\n                                className=\"login-form-forgot\"\r\n                                href=\"https://ant.design/index-cn\"\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                            >\r\n                                agreement\r\n                            </a>\r\n                        </Checkbox>\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item {...tailFormItemLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">Register</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nconst WrappedRegistrationForm = Form.create()(RegistrationForm);\r\n\r\nexport default WrappedRegistrationForm","import React, { Component } from 'react';\r\nimport './index.css';\r\nimport Registerform from '../../../Component/form/registerform';\r\n\r\nexport default class Index extends Component {\r\n\r\n  componentDidMount() {\r\n    /* eslint-disable no-unused-vars */\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Login-contain\">\r\n        <Registerform></Registerform>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","import React from \"react\"\r\nimport { Form, Input, Button, } from 'antd';\r\nimport 'antd/lib/form/style/css';\r\nimport 'antd/lib/input/style/css';\r\nimport 'antd/lib/button/style/css';\r\n\r\nclass FindPasswordForm extends React.Component {\r\n    state = {\r\n        confirmDirty: false,\r\n        autoCompleteResult: [],\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFieldsAndScroll((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 8 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 16 },\r\n            },\r\n        };\r\n        const tailFormItemLayout = {\r\n            wrapperCol: {\r\n                xs: {\r\n                    span: 24,\r\n                    offset: 0,\r\n                },\r\n                sm: {\r\n                    span: 16,\r\n                    offset: 8,\r\n                },\r\n            },\r\n        };\r\n\r\n        return (\r\n            <Form onSubmit={this.handleSubmit}>\r\n                <Form.Item\r\n                    {...formItemLayout}\r\n                    label=\"E-mail\"\r\n                >\r\n                    {getFieldDecorator('email', {\r\n                        rules: [{\r\n                            type: 'email', message: 'The input is not valid E-mail!',\r\n                        }, {\r\n                            required: true, message: 'Please input your E-mail!',\r\n                        }],\r\n                    })(\r\n                        <Input />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item {...tailFormItemLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">Send Email</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nconst WrappedRegistrationForm = Form.create()(FindPasswordForm);\r\n\r\nexport default WrappedRegistrationForm","import React, { Component } from 'react';\r\nimport './index.css';\r\nimport Findform from '../../../Component/form/findform';\r\n\r\nexport default class Index extends Component {\r\n\r\n  componentDidMount() {\r\n    /* eslint-disable no-unused-vars */\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Login-contain\">\r\n        <Findform></Findform>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","import React, { Suspense } from 'react';\r\nimport { Route, Switch, HashRouter } from 'react-router-dom';\r\nimport Home from '../pages/home/index';\r\nimport Login from '../pages/login/index'\r\nimport Register from '../pages/register/index'\r\nimport Findpassword from '../pages/findpassword/index'\r\n\r\n// const Home = lazy(() => import('../pages/home/index'));\r\n// const Login = lazy(() => import('../pages/login/index'));\r\n// Warning: Failed prop type: Invalid prop `component` of type `object` supplied to `Route`, expected `function`.\r\n\r\n// const mainRouter = [\r\n//   {\r\n//     name: '主页',\r\n//     key: 'home',\r\n//     route: {\r\n//       path: '/home',\r\n//       component: Home\r\n//     }\r\n//   },\r\n//   {\r\n//     name: '登录',\r\n//     key: 'login',\r\n//     route: {\r\n//       path: '/login',\r\n//       component: Login\r\n//     }\r\n//   }\r\n// ];\r\n\r\nconst routes = (\r\n  <Suspense fallback={<div>Loading...</div>}>\r\n    <Switch>\r\n      {/* {mainRouter.map((route) => <Route key={route.key} {...route.route} />)} */}\r\n      <HashRouter>\r\n        <div>\r\n          <Route exact path=\"/\" component={Login} />\r\n          <Route path=\"/register\" component={Register} />\r\n          <Route path=\"/findpassword\" component={Findpassword} />\r\n          <Route path=\"/home\" component={Home} />\r\n        </div>\r\n      </HashRouter>\r\n    </Switch>\r\n  </Suspense>\r\n);\r\n\r\nexport default routes;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport routes from './views/routes/index';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nconst RootApp = () => (\r\n  <Router>\r\n    {routes}\r\n  </Router>\r\n);\r\n\r\n// serviceWorker.unregister();\r\nReactDOM.render(<RootApp />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}